name: Java CI/CD with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 22
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '22'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn -B package --file pom.xml
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}

      - name: Run tests
        run: mvn test
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}

      - name: Verify target directory exists after build
        run: ls -la target/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: target/

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add remote host to known_hosts
        run: ssh-keyscan -H 5.39.249.253 >> ~/.ssh/known_hosts

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: target/

      - name: List files before SCP
        run: ls -la target/

      - name: Copy files via SCP
        run: scp -r target/ root@5.39.249.253:/root

      - name: Run deployment script
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          GPT_TOKEN: ${{ secrets.GPT_TOKEN }}
        run: ssh root@5.39.249.253 'BOT_TOKEN=${{ secrets.BOT_TOKEN }} GPT_TOKEN=${{ secrets.GPT_TOKEN }} bash -s' < ./deploy.sh
